apiVersion: v1
kind: ServiceAccount
metadata:
  name: resource-view-controller
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: t7d.io.resource-view-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: t7d.io.resource-view-controller
subjects:
  - kind: ServiceAccount
    name: resource-view-controller
    namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: t7d.io.resource-view-controller
rules:
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
    # Check if we really need these two later
    - list
    - watch
  - apiGroups:
    - cluster.karmada.io
    resources:
    - clusters
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - t7d.io
    resources:
    - resourceaggregationviews
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - t7d.io
    resources:
    - tenantviews
    - userviews
    - namespaceviews
    - tenantviews/status
    - namespaceviews/status
    - userviews/status
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - apiextensions.k8s.io
    resources:
    - customresourcedefinitions
    verbs:
    - get
    - list
    - watch
    - create
  - apiGroups:
    - ""
    resources:
    - configmaps
    - events
    verbs:
    - get
    - list
    - create
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - get
    - create
    - update
  - apiGroups:
    - policy
    resourceNames:
    - default
    resources:
    - podsecuritypolicies
    verbs:
    - use
  - apiGroups:
    - extensions
    resourceNames:
    - default
    resources:
    - podsecuritypolicies
    verbs:
    - use
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resource-view-controller
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      resource-view-controller: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        resource-view-controller: controller-manager
    spec:
      containers:
        - image: {{ .Values.registryServer }}/{{ .Values.resourceView.image }}
          env:
          - name: LEADER_ELECTION_NAMESPACE
            value: {{ .Release.Namespace }}
          name: viewer
          livenessProbe:
            failureThreshold: 4
            httpGet:
              path: /healthz
              port: 80
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 4
            httpGet:
              path: /healthz
              port: 80
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 1
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
      serviceAccountName: resource-view-controller
      terminationGracePeriodSeconds: 30
